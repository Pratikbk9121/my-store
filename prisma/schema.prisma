// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  role      Role     @default(CUSTOMER)
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
}

model Product {
  id          String   @id @default(cuid())
  name        String
  description String?
  price       Float
  category    Category
  material    String   @default("925 Silver")
  weight      Float?
  dimensions  String?
  inStock     Boolean  @default(true)
  featured    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  images      ProductImage[]
  orderItems  OrderItem[]

  @@index([category])
  @@index([featured])
  @@index([inStock])
  @@index([price])
  @@index([createdAt])
}

model ProductImage {
  id        String    @id @default(cuid())
  productId String
  imageData Bytes
  imageType String
  size      ImageSize
  alt       String?
  createdAt DateTime  @default(now())
  product   Product   @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@index([productId])
}

model Order {
  id         String      @id @default(cuid())
  userId     String
  status     OrderStatus @default(PENDING)
  total      Float
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  user       User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  items      OrderItem[]

  @@index([userId])
  @@index([status])
  @@index([createdAt])
}

model OrderItem {
  id        String  @id @default(cuid())
  orderId   String
  productId String
  quantity  Int     @default(1)
  price     Float
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product   Product @relation(fields: [productId], references: [id])

  @@index([orderId])
  @@index([productId])
  @@unique([orderId, productId])
}

enum Role {
  CUSTOMER
  ADMIN
}

enum Category {
  NECKLACE
  RING
  EARRING
  BRACELET
  BROOCH
  PENDANT
  BANGLE
  CHARM
  BELT
  WATCH
  SCARF
  TIE
  HAT
  GLOVE
  SHOES
  BAG
  BELLY_BUTTON
  PIERCING
  CANDLE
  DECORATION
  GIFT
  OTHER
}

enum ImageSize {
  THUMBNAIL
  MEDIUM
  FULL
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
}
